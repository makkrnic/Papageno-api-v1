FORMAT: 1A

# Papageno API
Papageno API is the API to the [Papageno choirs manager](http://www.papageno.info/) available at https://www.papageno.info/api/v1/ or https://staging.papageno.info/api/v1/.
The SSL certificates are available at [/www.papageno.info.cert](http://www.papageno.info/www.papageno.info.cert) and [/staging.papageno.info.cert](http://staging.papageno.info/staging.papageno.info.cert), respectively.

All requests except authorization requests `/oauth/*` require authorization token to be present in the header `Authorization: Bearer <access_token>`.

# Group Authorization
OAuth2 authorization

Only API calls that doesn't use /api/v1 prefix

## Authorize [/oauth/token]

### Using username and password [POST]

+ Parameters

    + grant_type  (required, string)  ... Grant type. Has to be `password` in this case.
    + client_id   (required, string)  ... Client id obtainder from the provider (Papageno)
    + username    (required, string)  ... Papageno user's email address
    + password    (required, string)  ... Papageno user's password

+ Request (application/json)

        {
          "grant_type": "password",
          "client_id": "2c98244711dd3d09b7782adbb8d95c83e972eeffd2939dd0f68a3951b6435130",
          "username": "username",
          "password": "user_password"
        }

+ Response 200 (application/json)

        {
          "access_token": "09732c68d78b8119e3fb197a66f79e860f76fa4760fb79fd8271562aad3694b6",
          "token_type": "bearer",
          "expires_in": 7200,
          "refresh_token":"d701cefa5804adb6aefc628eefd0a6730f009f069be973aab2306c6ef888ba53"
        }

### Using refresh_token [POST]

+ Parameters

    + grant_type    (required, string)  ... Grant type. Has to be `refresh_token` in this case.
    + refresh_token (required, string)  ... Previously issued refresh token

+ Request (application/json)

        {
          "grant_type": "refresh_token",
          "refresh_token": "89219b474f7e3ca9748e8499addf00cc0a033f470abab7489df0b9b871ad9387"
        }

+ Response 200 (application/json)

        {
          "access_token": "09732c68d78b8119e3fb197a66f79e860f76fa4760fb79fd8271562aad3694b6",
          "token_type": "bearer",
          "expires_in": 7200,
          "refresh_token":"d701cefa5804adb6aefc628eefd0a6730f009f069be973aab2306c6ef888ba53"
        }

# Group Users
## User [/users/{id}]

A single user with its details

### GET

Returns user details or `HTTP 403`

+ Parameters

    + id (required, string, `1`)  ... User's id. Can be `me` in which case it is referencing current user

+ Request (application/json)

    + Headers

            Authorization: Bearer <acces_token>

+ Response 200 (application/json)

        {
          "id": 1,
          "first_name": "First",
          "last_name" : "Last",
          "email"     : "user@example.com",
          "choirs"     : [
                {
                  "id": 1,
                  "slug": "choir-1",
                  "name": "Choir 1"
                }
            ]
        }

+ Response 403

# Group Choirs
## Single choir [/choirs/{id}]

### GET
+ Parameters

    + id (required, integer, `1`) ... Choir id

+ Request (application/json)

    + Headers

            Authorization: Bearer <access_token>


# Group Rehearsals
## Rehearsals collection [/choirs/{choir_id}/rehearsals]
Choir's rehearsals in reverse chronological order

### List all Rehearsals [GET]
+ Parameters

    + choir_id (required, integer, `1`) ... Choir which rehearsals are requested


+ Request (application/json)

    + Headers

            Authorization: Bearer <acces_token>

# Group Rehearsal attendances

## Rehearsal attendances collection [/choirs/{choir_id}/rehearsals/{rehearsal_id}/attendances]

### List all attendances [GET]
List of attendances for rehearsal

+ Parameters

    + choir_id (required, integer, `1`) ... Choir which rehearsals are requested
    + rehearsal_id (required, integer, `64`) ... Rehearsal for which attendances are requested 

+ Request (application/json)

    + Headers

            Authorization: Bearer <acces_token>

+ Response 200 (application/json)

        [
          {
            "id": null,
            "status":null,
            "note":null,
            "user":{
              "id":58,
              "first_name":"First",
              "last_name":"User",
              "email":"first_user@example.com"
            },
            "rehersal":{
              "id": 64
            }
          },
          {
            "id": 88
            "status": "not_attending"
            "note": "some note",
            "user": {
              "id":50,
              "first_name":"Second",
              "last_name":"User",
              "email":"second_user@example.com"
            },
            "rehersal": {
              "id": 64
            }
          }
        ]

### POST
Create a new attendance

+ Parameters

    + choir_id (required, integer, `1`) ... Choir which rehearsals are requested
    + rehearsal_id (required, integer, `1`) ... Rehearsal for which attendances are requested 

+ Request (application/json)

        {
          "user_id": 42,
            "attendance" {
              "status"  : "attending/not_attending",
              "note"    : "arbitrary string"
            }
        }
    
    + Headers

            Authorization: Bearer <acces_token>


+ Response 201 (application/json)

        {
          "id": 88
          "status": "not_attending"
          "note": "some note",
          "user": {
            "id":50,
            "first_name":"Second",
            "last_name":"User",
            "email":"second_user@example.com"
          },
          "rehersal": {
            "id": 64
          }
        }

## Single Rehearsal attendance  [/choirs/{choir_id}/rehearsals/{rehearsal_id}/attendances/{attendance_id}]
### GET
Return single attendance

+ Parameters

    + choir_id (required, integer, `1`) ... Choir which rehearsals are requested
    + rehearsal_id (required, integer, `1`) ... Rehearsal for which attendance is requested 
    + attendance_id (required, integer, `1`)

+ Request (application/json)

    + Headers

            Authorization: Bearer <acces_token>

### PUT
Update single attendance

+ Parameters

    + choir_id (required, integer, `1`) ... Choir which rehearsals are requested
    + rehearsal_id (required, integer, `1`) ... Rehearsal for which attendance is requested 
    + attendance_id (required, integer, `1`)

+ Request (application/json)

        {
            "attendance" {
              "status"  : "attending/not_attending",
              "note"    : "arbitrary string"
            }
        }


+ Request (application/json)

    + Headers

            Authorization: Bearer <acces_token>
